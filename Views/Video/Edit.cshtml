@model JimRadioMaint.Models.Video

@* For class VideoHelper: *@
@using JimRadioMaint

@* For Web.Config settings: *@
@using System.Web.Configuration;

@{
    ViewBag.Title = "Edit " + Model.youtube_title;  
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm())
{
<table id="EditTable">
	<tr valign="top"> 
	    <td width="500">

            @Html.ValidationSummary(true)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    
            <fieldset>
    
                <legend>Video</legend>

                @Html.HiddenFor(model => model.id)

                @*
                NOTE: The framework must be doing modification by way of
                DELETE/INSERT.  If the following columns are not carried,
                albeit in a hidden format, the new row will be written
                with all of them blank: *@
                @Html.HiddenFor(model => model.youtube_title)
                @Html.HiddenFor(model => model.youtube_id)
                @Html.HiddenFor(model => model.duration_seconds)
                @Html.HiddenFor(model => model.played)
                @Html.HiddenFor(model => model.play_error)

                <div class="display-label">
                    <strong>@Html.LabelFor(model => model.youtube_title)</strong>
                </div>

                <div>
                    <a href="@Url.Content(VideoHelper.VideoPlayUrl(@Html.DisplayFor(model => model.youtube_id).ToHtmlString()))"
                        target="_blank">
                        @Html.DisplayFor(model => model.youtube_title)
                    </a>
                </div>

                <div class="display-label">
                    <strong>@Html.LabelFor(model => model.youtube_id)</strong>
                </div>

                <div class="display-field">
                    @Html.DisplayFor(model => model.youtube_id)
                </div>

                <div class="display-label">
                    <strong>@Html.LabelFor(model => model.duration_seconds)</strong>
                </div>
 
                <div>
                    @VideoHelper.DurationMinutesSeconds(Model.duration_seconds)            
                </div>
        
                <div class="editor-label">
                    <strong>@Html.LabelFor(model => model.genre)</strong>
                </div>

                <div class="editor-field">
                    @Html.DropDownListFor(model => model.genre, new SelectList(
                        ViewBag.genres, "code_value", "code_description"))
                    @Html.ValidationMessageFor(model => model.genre)
                </div>

                <div class="editor-label">
                    <strong>@Html.LabelFor(model => model.rating)</strong>
                </div>

                <div class="editor-field">
                    @Html.DropDownListFor(model => model.rating, new SelectList(
                        ViewBag.ratings, "code_value", "code_description"))
                    @Html.ValidationMessageFor(model => model.rating)
                </div>

                <div class="display-label">
                    <strong>@Html.LabelFor(model => model.played)</strong>
                </div>

                <div>
                    @{                
                        string isChecked = "";

                        if (Model.played == "Y") { isChecked = "checked"; }
                    }

                    <input id="played" type="checkbox" @isChecked disabled="disabled"/>
                </div>

                <div class="display-label">
                    <strong>@Html.LabelFor(model => model.play_error)</strong>
                </div>

                <div>

                    @{
                        var playError = Html.DisplayFor(model => model.play_error);

                        string playErrorIcon = "dummy.jpg";

                        if (string.IsNullOrEmpty(playError.ToString()) == false)
                        {
                            // If we have an icon for this error code, show it...
                            try
                            {
                                playErrorIcon = ViewBag.dictionaryPlayErrorIcon[playError.ToString()];

                                <img alt="Video play errors such as NOT FOUND."
                                        src="@Url.Content("/JimRadioMaint/Images/" + @playErrorIcon)" />
                            }
                            catch (Exception)
                            {
                                // ...otherwise, show the numeric value of the error code:
                                @Html.DisplayFor(model => model.play_error)
                            }

                        }
                    }
                </div>

                <p>
                    <input type="submit" value="Save" />
                </p>

            </fieldset>
	    </td>

	    <td>
            <img src="@Url.Content("http://img.youtube.com/vi/" +
                @Html.DisplayFor(model => model.youtube_id) + "/0.jpg")"
                alt="YouTube's image for this video." height="240" width="240" />
	    </td>
	</tr>
</table>    
}

<div>
    <br/>
   @Html.ActionLink("Back to List", "Index")
    <br/>
    <br/>
</div>
